{"version":3,"sources":["src/index.js","src/index.ts"],"names":[],"mappings":"AAAA;;ACCA,IAAI,CAAC,OAAO,cAAZ,EAA4B;AACxB,YAAQ,gBAAR;AACH;AACD,IAAA,qBAAA,QAAiC,oBAAjC,CAAA;AAEA,IAAI;;AAEA,YAAQ,oBAAR,EAA8B,OAA9B;AACF,CAHF,CAGE,OAAO,CAAP,EAAU,CACX;AAED,SAAA,YAAA,CAAqC,OAArC,EAAsE,MAAtE,EAAqF;AACjF,QAAM,SAAS,IAAI,mBAAA,gBAAJ,EAAf;AACA,QAAI;AACA,gBAAQ,OAAR,CAAgB,UAAC,MAAD,EAAO;AACnB,mBAAO,WAAP,CAAmB,MAAnB;AACH,SAFD;AAGA,eAAO,OAAO,WAAP,CAAmB,MAAnB,CAAP;AACF,KALF,CAKE,OAAO,CAAP,EAAU;AACR,eAAO,QAAQ,MAAR,CAAuB,CAAvB,CAAP;AACH;AACJ;AAVD,OAAA,cAAA,CAAA,OAAA,EAAA,YAAA,EAAA,EAAA,OAAA,IAAA,EAAA;ADYA,QAAQ,OAAR,GAAkB,YAAlB","file":"src/index.js","sourcesContent":["\"use strict\";\nif (!global._babelPolyfill) {\n    require('babel-polyfill');\n}\nconst jsonSchemaParser_1 = require('./jsonSchemaParser');\ntry {\n    // optional\n    require('source-map-support').install();\n}\ncatch (e) {\n}\nfunction dtsgenerator(schemas, prefix) {\n    const parser = new jsonSchemaParser_1.JsonSchemaParser();\n    try {\n        schemas.forEach((schema) => {\n            parser.parseSchema(schema);\n        });\n        return parser.generateDts(prefix);\n    }\n    catch (e) {\n        return Promise.reject(e);\n    }\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = dtsgenerator;\n","declare var global: any;\nif (!global._babelPolyfill) {\n    require('babel-polyfill');\n}\nimport { JsonSchemaParser } from './jsonSchemaParser';\n\ntry {\n    // optional\n    require('source-map-support').install();\n} catch (e) {\n}\n\nexport default function dtsgenerator(schemas: JsonSchemaOrg.Schema[], prefix?: string): Promise<string> {\n    const parser = new JsonSchemaParser();\n    try {\n        schemas.forEach((schema) => {\n            parser.parseSchema(schema);\n        });\n        return parser.generateDts(prefix);\n    } catch (e) {\n        return Promise.reject<string>(e);\n    }\n}\n\n"],"sourceRoot":"/source/"}